openapi: 3.0.3
info:
  title: "Example Pet Store"
  description: "A Pet Store API."
  version: "1.0"
paths:
  /pets:
    get:
      operationId: "GET HTTP"
      parameters:
      - name: "type"
        in: "query"
        schema:
          type: "string"
      - name: "page"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        httpMethod: "GET"
        uri: "http://petstore.execute-api.us-west-1.amazonaws.com/petstore/pets"
        passthroughBehavior: "when_no_match"
    post:
      operationId: "Create Pet"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
        required: true
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewPetResponse"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        httpMethod: "POST"
        uri: "http://petstore.execute-api.us-west-1.amazonaws.com/petstore/pets"
        passthroughBehavior: "when_no_match"
  /pets/{petId}:
    get:
      operationId: "Get Pet"
      parameters:
      - name: "petId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        httpMethod: "GET"
        uri: "http://petstore.execute-api.us-west-1.amazonaws.com/petstore/pets/{petId}"
        passthroughBehavior: "when_no_match"
  /path:
    get:
      responses:
        "200":
          description: "200 response"
          content: {}
      x-amazon-apigateway-integration:
        type: "http"
        httpMethod: "GET"
        uri: "http://petstore.execute-api.us-west-1.amazonaws.com/petstore/pets"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
components:
  schemas:
    Pets:
      type: "array"
      items:
        $ref: "#/components/schemas/Pet"
    NewPetResponse:
      type: "object"
      properties:
        pet:
          $ref: "#/components/schemas/Pet"
        message:
          type: "string"
    Pet:
      type: "object"
      properties:
        id:
          type: "string"
        type:
          type: "string"
        price:
          type: "number"
    NewPet:
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/PetType"
        price:
          type: "number"
    PetType:
      type: "string"
      enum:
      - "dog"
      - "cat"
      - "fish"
      - "bird"
      - "gecko"